<?php
 
/*
 * @file
 * General module file for IDMOD
 */

 
/**
 * TODO:
 * 8/3/2014: We should load the js on some pages individually.
 *    See: http://www.benmarshall.me/load-js-css-specific-page-drupal-7/
 */
 
 

/**
 * Implementation of hook_field_display_alter
 */
function idmod_field_display_node_alter(&$display, $context) {
  // Leave field labels out of the search index.
  $debug_stop = $context;
  if($context['entity']->type == 'publications') {
    // Look for our entity type
    
    if (isset($context['entity']->field_publications_author['und'][0]['entity']->label)) {
      // Loop through the author array
      // TODO: Each label is process at least three times... could set a flag and stop that BS
      foreach ($context['entity']->field_publications_author['und'] as $key => $item) {
        $label = $item['entity']->field_profile_first_name['und'][0]['value'];
        $label .= ' ';
        $label .= $item['entity']->field_profile_last_name['und'][0]['value'];
        $context['entity']->field_publications_author['und'][$key]['entity']->label =  $label;
      }
    } 
  }

}

/**
 * Implements hook_context_load_alter().
 * http://drupalcontrib.org/api/drupal/contributions%21context%21context.api.php/function/hook_context_load_alter/7
 */
function idmod_context_load_alter(&$context) {
  // We need to make sure that the context menu blocks are ordered correctly via context.
  // Start with the search form and make it the "lightest". 
  
  if ($context->name == 'all_pages') {
    $context->reactions['block']['blocks']['search-form']['weight'] = -20;
  }
  if ($context->name == 'publications_page') {
    $context->reactions['block']['blocks']['block-5']['weight'] = -10;
  }
}

/**
 * Implementation of hook_entity_info_alter(&$entity_info).
 * Modify URL of taxonomy terms
 * Ref: http://drupal.stackexchange.com/questions/18784/how-to-modify-taxonomy-term-path-in-the-page-render-array
 * Ref: http://www.erikwebb.net/blog/changing-url-all-taxonomy-terms/
 */
function idmod_entity_info_alter(&$entity_info) {

  $entity_info['taxonomy_term']['uri callback'] = 'idmod_taxonomy_term_uri';
  
  $entity_info['node']['view modes']['full_node'] = array(
    'label' => t('Full Node display'),
    'custom settings' => TRUE,
  );
}


function idmod_taxonomy_term_uri($term) {
  
  switch ($term->name) {
      case "Numerical Methods":
          $new_url = 'research/numerical';
          break;
      case "Tuberculosis":
          $new_url = 'research/tuberculosis';
          break;
      case "HIV":
          $new_url = 'research/hiv';
          break;        
      case "malaria":
        $new_url = 'research/hiv';
        break;
  }  
  //return array('path' => 'research/numerical' . $term->tid);
  return array('path' => $new_url);
}

/**
 * Implementation of hook_entity_view_alter
 * We will modify the incoming data from the view handler before rendering. 
 */
function idmod_entity_view_alter(&$build, $type) {
  $debug_build = $build;
  
  if($build['#bundle'] == 'publications') {
    
    $node = menu_get_object();
    
    if (isset($node->field_publications_link['und'][0]['title'])) {
      $publication_name = $node->field_publications_link['und'][0]['title'];
    }
    else $publication_name = null;
 
    $build['pubication_name'] = array(
      '#type' => 'item',
      '#markup' => $publication_name,
      '#weight' => '2',
      '#prefix' => '<div class="field field_publication_title">',
      '#suffix' => '</div>',
    );
    $build['field_publications_link']['#title'] = t('Read online');
    /* Adjust the weight of array items to order correctly */
    $build['field_publications_date']['#weight'] = '3';
    $build['field_publications_topic']['#weight'] = '4';
    $build['field_publications_link']['#weight'] = '5';
    $build['body']['#weight'] = '6';
    $key = 0;
      while (isset($build['field_publications_author'][$key])) {
        // If there is more then one name, we add a comma to present item.
        if(isset($build['field_publications_author'][$key+1])) {
          $build['field_publications_author'][$key]['#markup'] .= ',';       
        }
        ++$key;
      }
  }
}











